# -*- coding: utf-8 -*-
"""CodSoft Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1prVwOHveRzKeKjaXLltdbYuVj4n7tI8k

TITANIC SURVIVAL PREDICTION
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.preprocessing import StandardScaler, OneHotEncoder

data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/tested.csv')

data['Age'].fillna(data['Age'].mean(), inplace=True)
data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

data = pd.get_dummies(data, columns=['Sex', 'Embarked'], drop_first=True)

X = data[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Sex_male', 'Embarked_Q', 'Embarked_S']]
y = data['Survived']
X=X.fillna(0)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy:.2f}')
print('Confusion Matrix:\n', conf_matrix)
print('Classification Report:\n', class_report)

specific_name = "Ilieff, Mr. Ylio"

if specific_name in data['Name'].values:
    survived = data.loc[data['Name'] == specific_name, 'Survived'].values[0]
    if survived == 1:
        print(f"{specific_name} survived.")
    else:
        print(f"{specific_name} did not survive.")
else:
    print(f"No records found for {specific_name}.")

